<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Pbicon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>